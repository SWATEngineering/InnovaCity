{
    "annotations": {
      "list": [
        {
          "builtIn": 1,
          "datasource": {
            "type": "grafana",
            "uid": "-- Grafana --"
          },
          "enable": true,
          "hide": true,
          "iconColor": "rgba(0, 211, 255, 1)",
          "name": "Annotations & Alerts",
          "type": "dashboard"
        }
      ]
    },
    "editable": true,
    "fiscalYearStartMonth": 0,
    "graphTooltip": 0,
    "id": 3,
    "links": [],
    "liveNow": false,
    "panels": [
      {
        "datasource": {
          "type": "grafana-clickhouse-datasource",
          "uid": "PDEE91DDB90597936"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "custom": {
              "align": "auto",
              "cellOptions": {
                "type": "auto"
              },
              "inspect": false
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            },
            "unitScale": true
          },
          "overrides": []
        },
        "gridPos": {
          "h": 18,
          "w": 24,
          "x": 0,
          "y": 0
        },
        "id": 1,
        "options": {
          "cellHeight": "sm",
          "footer": {
            "countRows": false,
            "fields": "",
            "reducer": [
              "sum"
            ],
            "show": false
          },
          "showHeader": true
        },
        "pluginVersion": "10.3.0",
        "targets": [
          {
            "datasource": {
              "type": "grafana-clickhouse-datasource",
              "uid": "PDEE91DDB90597936"
            },
            "editorType": "sql",
            "format": 1,
            "meta": {
              "builderOptions": {
                "columns": [],
                "database": "",
                "limit": 1000,
                "mode": "list",
                "queryType": "table",
                "table": ""
              }
            },
            "pluginVersion": "4.0.3",
            "queryType": "table",
            "rawSql": "SELECT \n    name,\n    type,\n    timestamp, \n    rilevazione, \n    latitude,\n    longitude\nFROM (\n\nSELECT \n    name, \n    type,\n    timestamp, \n    CONCAT('gradi:  ', CAST(value AS String)) AS rilevazione, \n    latitude,\n    longitude\nFROM innovacity.temperatures \nWHERE type IN (${tipo_sensore}) \n  AND name IN (${nome_sensore}) \nUNION ALL\nSELECT \n    name, \n    type,\n    timestamp, \n    CONCAT('millimetri:  ', CAST(value AS String)) AS rilevazione, \n    latitude,\n    longitude\nFROM innovacity.rain\nWHERE type IN (${tipo_sensore}) \n  AND name IN (${nome_sensore})\nUNION ALL\nSELECT \n    name, \n    type,\n    timestamp, \n    CONCAT('velocità:  ', CAST(value AS String), ' direzione:  ', CAST(direction AS String)) AS rilevazione, \n    latitude,\n    longitude\nFROM innovacity.wind\nWHERE type IN (${tipo_sensore}) \n  AND name IN (${nome_sensore})\n\nUNION ALL\nSELECT \n    name, \n    type,\n    timestamp, \n    CONCAT('percentuale:  ', CAST(value AS String)) AS rilevazione, \n    latitude,\n    longitude\nFROM innovacity.humidity\nWHERE type IN (${tipo_sensore}) \n  AND name IN (${nome_sensore})\n\nUNION ALL\n\nSELECT \n    name, \n    type,\n    timestamp, \n    CONCAT('percentuale:  ', CAST(value AS String)) AS rilevazione, \n    latitude,\n    longitude\nFROM innovacity.reservoirs\nWHERE type IN (${tipo_sensore}) \n  AND name IN (${nome_sensore})\n\nUNION ALL\nSELECT \n    name, \n    type,\n    timestamp, \n    CONCAT('ug/m^3:  ', CAST(value AS String)) AS rilevazione, \n    latitude,\n    longitude\nFROM innovacity.air_pollution\nWHERE type IN (${tipo_sensore}) \n  AND name IN (${nome_sensore})\nUNION ALL\nSELECT \n    name, \n    type,\n    timestamp, \n    CONCAT('batteria:  ', CAST(value AS String)) AS rilevazione, \n    latitude,\n    longitude\nFROM innovacity.ebikes\nWHERE type IN (${tipo_sensore}) \n  AND name IN (${nome_sensore})\nUNION ALL\nSELECT \n    name, \n    type,\n    timestamp, \n    CONCAT('percentuale:  ', CAST(value AS String)) AS rilevazione, \n    latitude,\n    longitude\nFROM innovacity.eco_zone\nWHERE type IN (${tipo_sensore}) \n  AND name IN (${nome_sensore})\nUNION ALL\nSELECT \n    name, \n    type,\n    timestamp, \n    CONCAT('current:  ', CAST(current AS String), '  slot massimi:  ', CAST(max_slots AS String)) AS rilevazione, \n    latitude,\n    longitude\nFROM innovacity.parking\nWHERE type IN (${tipo_sensore}) \n  AND name IN (${nome_sensore})\nUNION ALL\nSELECT \n    name, \n    type,\n    timestamp, \n    CONCAT('erogazione:  ', CAST(erogation_power AS String), '  disponibilità:  ', CAST(availability AS String)) AS rilevazione, \n    latitude,\n    longitude\nFROM innovacity.charging_station\nWHERE type IN (${tipo_sensore}) \n  AND name IN (${nome_sensore})\nUNION ALL\nSELECT \n    name, \n    type,\n    timestamp, \n    CONCAT('livello congestione:  ', CAST(traffic_level AS String)) AS rilevazione, \n    latitude,\n    longitude\nFROM innovacity.traffic\nWHERE type IN (${tipo_sensore}) \n  AND name IN (${nome_sensore})\n\n\n) as combined_data\nORDER BY timestamp DESC \n",
            "refId": "A"
          }
        ],
        "title": "Panel Title",
        "transformations": [
          {
            "id": "organize",
            "options": {
              "excludeByName": {
                "latitude": true,
                "longitude": true
              },
              "includeByName": {},
              "indexByName": {},
              "renameByName": {
                "name": "Nome Sensore",
                "rilevazione": "Rilevazione",
                "timestamp": "Orario",
                "type": "Tipologia"
              }
            }
          }
        ],
        "transparent": true,
        "type": "table"
      }
    ],
    "refresh": "",
    "schemaVersion": 39,
    "tags": [],
    "templating": {
      "list": [
        {
          "current": {
            "selected": true,
            "text": [
              "temperature1"
            ],
            "value": [
              "temperature1"
            ]
          },
          "datasource": {
            "type": "grafana-clickhouse-datasource",
            "uid": "PDEE91DDB90597936"
          },
          "definition": "(SELECT name AS __text, name AS __value FROM innovacity.temperatures) UNION ALL (SELECT name AS __text, name AS __value FROM innovacity.rain) UNION ALL (SELECT name AS __text, name AS __value FROM innovacity.reservoirs)  UNION ALL (SELECT name AS __text, name AS __value FROM innovacity.air_pollution) UNION ALL (SELECT name AS __text, name AS __value FROM innovacity.ebikes) UNION ALL (SELECT name AS __text, name AS __value FROM innovacity.eco_zone) UNION ALL (SELECT name AS __text, name AS __value FROM innovacity.humidity) UNION ALL (SELECT name AS __text, name AS __value FROM innovacity.parking) UNION ALL (SELECT name AS __text, name AS __value FROM innovacity.charging_station) UNION ALL (SELECT name AS __text, name AS __value FROM innovacity.traffic) UNION ALL (SELECT name AS __text, name AS __value FROM innovacity.wind)  ",
          "hide": 0,
          "includeAll": false,
          "label": "Nome Sensore",
          "multi": true,
          "name": "nome_sensore",
          "options": [],
          "query": "(SELECT name AS __text, name AS __value FROM innovacity.temperatures) UNION ALL (SELECT name AS __text, name AS __value FROM innovacity.rain) UNION ALL (SELECT name AS __text, name AS __value FROM innovacity.reservoirs)  UNION ALL (SELECT name AS __text, name AS __value FROM innovacity.air_pollution) UNION ALL (SELECT name AS __text, name AS __value FROM innovacity.ebikes) UNION ALL (SELECT name AS __text, name AS __value FROM innovacity.eco_zone) UNION ALL (SELECT name AS __text, name AS __value FROM innovacity.humidity) UNION ALL (SELECT name AS __text, name AS __value FROM innovacity.parking) UNION ALL (SELECT name AS __text, name AS __value FROM innovacity.charging_station) UNION ALL (SELECT name AS __text, name AS __value FROM innovacity.traffic) UNION ALL (SELECT name AS __text, name AS __value FROM innovacity.wind)  ",
          "refresh": 1,
          "regex": "",
          "skipUrlSync": false,
          "sort": 1,
          "type": "query"
        },
        {
          "current": {
            "selected": true,
            "text": [
              "temperature"
            ],
            "value": [
              "temperature"
            ]
          },
          "datasource": {
            "type": "grafana-clickhouse-datasource",
            "uid": "PDEE91DDB90597936"
          },
          "definition": "(SELECT type AS __text, type AS __value FROM innovacity.temperatures) UNION ALL (SELECT type AS __text, type AS __value FROM innovacity.rain) UNION ALL (SELECT type AS __text, type AS __value FROM innovacity.reservoirs)  UNION ALL \n(SELECT type AS __text, type AS __value FROM innovacity.air_pollution) \nUNION ALL \n(SELECT type AS __text, type AS __value FROM innovacity.ebikes) \nUNION ALL \n(SELECT type AS __text, type AS __value FROM innovacity.eco_zone) \nUNION ALL \n(SELECT type AS __text, type AS __value FROM innovacity.humidity) \nUNION ALL \n(SELECT type AS __text, type AS __value FROM innovacity.parking) \nUNION ALL \n(SELECT type AS __text, type AS __value FROM innovacity.charging_station) \nUNION ALL \n(SELECT type AS __text, type AS __value FROM innovacity.traffic) \nUNION ALL \n(SELECT type AS __text, type AS __value FROM innovacity.wind)",
          "hide": 0,
          "includeAll": false,
          "label": "Tipologia",
          "multi": true,
          "name": "tipo_sensore",
          "options": [],
          "query": "(SELECT type AS __text, type AS __value FROM innovacity.temperatures) UNION ALL (SELECT type AS __text, type AS __value FROM innovacity.rain) UNION ALL (SELECT type AS __text, type AS __value FROM innovacity.reservoirs)  UNION ALL \n(SELECT type AS __text, type AS __value FROM innovacity.air_pollution) \nUNION ALL \n(SELECT type AS __text, type AS __value FROM innovacity.ebikes) \nUNION ALL \n(SELECT type AS __text, type AS __value FROM innovacity.eco_zone) \nUNION ALL \n(SELECT type AS __text, type AS __value FROM innovacity.humidity) \nUNION ALL \n(SELECT type AS __text, type AS __value FROM innovacity.parking) \nUNION ALL \n(SELECT type AS __text, type AS __value FROM innovacity.charging_station) \nUNION ALL \n(SELECT type AS __text, type AS __value FROM innovacity.traffic) \nUNION ALL \n(SELECT type AS __text, type AS __value FROM innovacity.wind)",
          "refresh": 1,
          "regex": "",
          "skipUrlSync": false,
          "sort": 0,
          "type": "query"
        }
      ]
    },
    "time": {
      "from": "now-6h",
      "to": "now"
    },
    "timepicker": {},
    "timezone": "",
    "title": "Dati Grezzi",
    "uid": "b9c52716-1c31-4587-b3d2-f5369e2a0415",
    "version": 1,
    "weekStart": ""
  }