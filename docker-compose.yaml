version: '3.8'

services:
  zoo:
    image: confluentinc/cp-zookeeper:7.3.2
    hostname: zoo
    container_name: zoo
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zoo:2888:3888

  kafka:
    image: confluentinc/cp-kafka:7.3.2
    hostname: kafka
    container_name: kafka
    ports:
      - "9093:9093"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:19092,EXTERNAL://localhost:9093,EXTERNAL_DOCKER://kafka:9092,DOCKER://host.docker.internal:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,EXTERNAL_DOCKER:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo:2181"
      KAFKA_CREATE_TOPICS: "temperature:1:1"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_JMX_PORT: 9999
      KAFKA_JMX_HOSTNAME: ${DOCKER_HOST_IP:-127.0.0.1}
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
    depends_on:
      - zoo
    healthcheck:
      test: [ "CMD", "kafka-topics", "--bootstrap-server", "localhost:9092", "--list"]
      interval: 5s
      timeout: 30s
      retries: 10

  clickhouse:
    image: clickhouse/clickhouse-server
    hostname: clickhouse
    container_name: clickhouse
    ports:
      - "8123:8123"
    environment:
      # creazione database iniziale
      CLICKHOUSE_DB: innovacity
      # sostituisce l'utente `default`
      CLICKHOUSE_USER: ic_admin
      CLICKHOUSE_PASSWORD: ic_admin
      # crea un utente che ha il controllo degli accessi e la gestione degli accounts
      CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT: 1
    volumes:
      - ./InitDB:/docker-entrypoint-initdb.d
    depends_on:
      kafka:
        condition: service_healthy

  grafana:
    image: grafana/grafana-enterprise
    container_name: grafana
    restart: unless-stopped
    ports:
     - '3000:3000'
    environment:
        - GF_INSTALL_PLUGINS=grafana-clickhouse-datasource
    depends_on:
      kafka:
        condition: service_healthy

  simulators:
    build:
      context: ./PythonSensorsSimulator
    hostname: simulators
    container_name: simulators
    environment:
      KAFKA_HOST: "kafka"
      KAFKA_PORT: "9092"
    depends_on:
      kafka:
        condition: service_healthy